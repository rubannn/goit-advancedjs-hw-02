{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// DOM Elements\nconst elements = {\n  delayInput: document.querySelector(\"input[name='delay']\"),\n  form: document.querySelector('form'),\n  radioButtons: {\n    fulfilled: document.querySelector(\"input[value='fulfilled']\"),\n    rejected: document.querySelector(\"input[value='rejected']\"),\n  },\n};\n\n/**\n * Creates a promise that resolves or rejects after specified delay\n * @param {string} state - Promise state ('fulfilled' or 'rejected')\n * @param {number} delay - Delay in milliseconds\n * @returns {Promise} Promise that resolves or rejects after delay\n */\nfunction createDelayedPromise(state, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve('Success');\n      } else {\n        reject('Error');\n      }\n    }, delay);\n  });\n}\n\n/**\n * Shows success toast message\n * @param {number} delay - Delay in milliseconds\n */\nfunction showSuccessToast(delay) {\n  iziToast.success({\n    message: `Fulfilled promise in ${delay}ms`,\n    closeOnClick: true,\n    position: 'topRight',\n    displayMode: 0,\n    progressBar: false,\n  });\n}\n\n/**\n * Shows error toast message\n * @param {number} delay - Delay in milliseconds\n */\nfunction showErrorToast(delay) {\n  iziToast.error({\n    message: `Rejected promise in ${delay}ms`,\n    closeOnClick: true,\n    position: 'topRight',\n    displayMode: 0,\n    progressBar: false,\n  });\n}\n\n/**\n * Handles form submission\n * @param {Event} event - Form submit event\n */\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = parseInt(elements.delayInput.value);\n  const promiseState = elements.radioButtons.fulfilled.checked\n    ? 'fulfilled'\n    : 'rejected';\n\n  createDelayedPromise(promiseState, delay)\n    .then(() => showSuccessToast(delay))\n    .catch(() => showErrorToast(delay));\n}\n\n// Event Listeners\nelements.form.addEventListener('submit', handleFormSubmit);\n"],"names":["elements","createDelayedPromise","state","delay","resolve","reject","showSuccessToast","iziToast","showErrorToast","handleFormSubmit","event","promiseState"],"mappings":"wIAIA,MAAMA,EAAW,CACf,WAAY,SAAS,cAAc,qBAAqB,EACxD,KAAM,SAAS,cAAc,MAAM,EACnC,aAAc,CACZ,UAAW,SAAS,cAAc,0BAA0B,EAC5D,SAAU,SAAS,cAAc,yBAAyB,CAC9D,CACA,EAQA,SAASC,EAAqBC,EAAOC,EAAO,CAC1C,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQ,SAAS,EAEjBC,EAAO,OAAO,CAElB,EAAGF,CAAK,CACV,CAAC,CACH,CAMA,SAASG,EAAiBH,EAAO,CAC/BI,EAAS,QAAQ,CACf,QAAS,wBAAwBJ,CAAK,KACtC,aAAc,GACd,SAAU,WACV,YAAa,EACb,YAAa,EACjB,CAAG,CACH,CAMA,SAASK,EAAeL,EAAO,CAC7BI,EAAS,MAAM,CACb,QAAS,uBAAuBJ,CAAK,KACrC,aAAc,GACd,SAAU,WACV,YAAa,EACb,YAAa,EACjB,CAAG,CACH,CAMA,SAASM,EAAiBC,EAAO,CAC/BA,EAAM,eAAc,EAEpB,MAAMP,EAAQ,SAASH,EAAS,WAAW,KAAK,EAC1CW,EAAeX,EAAS,aAAa,UAAU,QACjD,YACA,WAEJC,EAAqBU,EAAcR,CAAK,EACrC,KAAK,IAAMG,EAAiBH,CAAK,CAAC,EAClC,MAAM,IAAMK,EAAeL,CAAK,CAAC,CACtC,CAGAH,EAAS,KAAK,iBAAiB,SAAUS,CAAgB"}